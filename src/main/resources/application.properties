spring.datasource.url=jdbc:postgresql://localhost:5432/monitoring_db
spring.datasource.username=user01
spring.datasource.password=user01
#to visualize the sql request sent to the server choose "true"
#show-sql option activates the visualization of the sql request written by the ORM
#ORM (Object Relational Mapping) Hibernate for java case.
#ORM for php Laravel case is Eloquent
spring.jpa.show-sql=true
## Hibernate Properties
# Disable feature detection by this undocumented parameter.
#This setting is used to control whether you should consult the JDBC metadata
#to determine certain Settings default values when the database may not be available
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
# Because detection is disabled you have to set correct dialect by hand.
#Dialect means "the variant of a language"
#Hibernate is database agnostic. It can work with different databases.
#at some point hibernate has to use database specific SQL
#Hibernate uses "dialect" configuration to know which database you are using
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect
# Hibernate ddl auto (create, create-drop, validate, update)
#ddl (Data Definition Language)
#this option specify the behavior of hibernate with changes made on jpa entities
spring.jpa.hibernate.ddl-auto = update
## Hibernate Logging
logging.level.org.hibernate.SQL=DEBUG